# Test de la page de traitement modifi√©e
Write-Host "Test de la page de traitement modifi√©e" -ForegroundColor Cyan

# 1. V√©rifier que les services sont d√©marr√©s
Write-Host "`n1. V√©rification des services..." -ForegroundColor Yellow

# Backend
try {
    $healthResponse = Invoke-RestMethod -Uri "http://localhost:8080/api/public/health" -Method GET
    Write-Host "‚úÖ Backend accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Backend non accessible" -ForegroundColor Red
    exit 1
}

# Frontend
try {
    $frontendResponse = Invoke-WebRequest -Uri "http://localhost:5173" -Method GET -TimeoutSec 5
    Write-Host "‚úÖ Frontend accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Frontend non accessible. D√©marrez avec: cd frontend && npm run dev" -ForegroundColor Red
    exit 1
}

# 2. V√©rifier les documents en base
Write-Host "`n2. V√©rification des documents en base..." -ForegroundColor Yellow
$loginData = @{username="admin"; password="admin123"} | ConvertTo-Json
try {
    $loginResponse = Invoke-RestMethod -Uri "http://localhost:8080/api/auth/login" -Method POST -Body $loginData -ContentType "application/json"
    $token = $loginResponse.token
    
    $documentsResponse = Invoke-RestMethod -Uri "http://localhost:8080/api/documents?page=0&size=20" -Method GET -Headers @{"Authorization"="Bearer $token"}
    Write-Host "‚úÖ Documents en base: $($documentsResponse.totalElements)" -ForegroundColor Green
    
    if ($documentsResponse.content.Count -gt 0) {
        Write-Host "   Documents trouv√©s:" -ForegroundColor Gray
        foreach ($doc in $documentsResponse.content) {
            Write-Host "     - $($doc.fileName) (ID: $($doc.id))" -ForegroundColor Gray
        }
    }
} catch {
    Write-Host "‚ùå Erreur lors de la v√©rification des documents: $($_.Exception.Message)" -ForegroundColor Red
}

# 3. Instructions pour tester
Write-Host "`n3. Instructions pour tester la page de traitement:" -ForegroundColor Yellow
Write-Host "   1. Ouvrez http://localhost:5173 dans votre navigateur" -ForegroundColor White
Write-Host "   2. Connectez-vous avec: admin / admin123" -ForegroundColor White
Write-Host "   3. Allez dans l'onglet 'Traitement de Documents'" -ForegroundColor White
Write-Host "   4. Vous devriez voir:" -ForegroundColor White
Write-Host "      - Un onglet 'Nouveau fichier' (comportement original)" -ForegroundColor Gray
Write-Host "      - Un onglet 'Document upload√©' (nouveau)" -ForegroundColor Gray
Write-Host "   5. Cliquez sur 'Document upload√©' pour voir la liste des documents" -ForegroundColor White
Write-Host "   6. S√©lectionnez un document pour le traiter" -ForegroundColor White

Write-Host "`n‚úÖ Test de configuration termin√©!" -ForegroundColor Green
Write-Host "`nüìã R√©sum√© des modifications apport√©es:" -ForegroundColor Cyan
Write-Host "   - Ajout de la r√©cup√©ration des documents upload√©s" -ForegroundColor Gray
Write-Host "   - Interface avec onglets pour choisir entre fichier local ou document upload√©" -ForegroundColor Gray
Write-Host "   - Affichage de la liste des documents upload√©s" -ForegroundColor Gray
Write-Host "   - S√©lection et indication visuelle du document choisi" -ForegroundColor Gray
Write-Host "   - Message informatif pour le traitement des documents uploades" -ForegroundColor Gray
